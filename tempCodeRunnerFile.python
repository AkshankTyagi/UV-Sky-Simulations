import numpy as np
import scipy.integrate as integrate

# Define constants
H0 = 70  # Hubble constant in km/s/Mpc
c = 299792.458  # Speed of light in km/s

# Define the cosmological parameters
Omega_m = 0.3
Omega_Lambda = 0.7

# Define the Hubble parameter H(z)
def H(z):
    return H0 * np.sqrt(Omega_m * (1 + z)**3 + Omega_Lambda)

# Define the integrand for the comoving distance
def integrand(z):
    return c / H(z)

# Calculate the comoving distance
def comoving_distance(z):
    integral, error = integrate.quad(integrand, 0, z)
    return integral

# Calculate the angular-diameter distance
def angular_diameter_distance(z):
    D_c = comoving_distance(z)
    return D_c / (1 + z)

# Calculate the luminosity distance
def luminosity_distance(z):
    D_c = comoving_distance(z)
    return D_c * (1 + z)

# Calculate the physical distance
def physical_distance(z):
    return comoving_distance(z)

# Example usage
z = 3  # Example redshift

D_c = comoving_distance(z)
D_A = angular_diameter_distance(z)
D_L = luminosity_distance(z)
D_phys = physical_distance(z)

print(f"Comoving Distance at z={z}: {D_c:.2f} Mpc")
print(f"Angular-Diameter Distance at z={z}: {D_A:.2f} Mpc")
print(f"Luminosity Distance at z={z}: {D_L:.2f} Mpc")
print(f"Physical Distance at z={z}: {D_phys:.2f} Mpc")
